---
import type { InferGetStaticParamsType, InferGetStaticPropsType, GetStaticPaths } from 'astro';
import BaseLayout from '@layouts/BaseLayout.astro';
import BlogPost from '@components/BlogPost.astro';
import { getCollection } from 'astro:content';
import { dateFormat } from 'src/scripts/dateFormat';
import BlogTags from '@components/BlogTags.astro';

export const getStaticPaths = (async () => {
  const allPosts = (await getCollection('blog')).reverse();
  const uniqueTags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.data.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts, tags: uniqueTags },
    };
  });
}) satisfies GetStaticPaths

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { tag } = Astro.params as Params;
const { posts, tags } = Astro.props as Props;
---
<BaseLayout pageTitle={tag}>
  <BlogTags route="/blog/tags/" tags={tags} current={tag}/>
  <p>Entradas etiquetadas con {tag}</p>
  <div class="post-list">
    {posts.map((post) => <BlogPost url={`/blog/${post.slug}`} title={post.data.title} date={dateFormat.format(post.data.date)} />)}
  </div>
</BaseLayout>
